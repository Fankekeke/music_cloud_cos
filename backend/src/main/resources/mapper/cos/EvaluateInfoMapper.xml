<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.mrbird.febs.cos.dao.EvaluateInfoMapper">

    <!-- 分页获取音乐评价信息 -->
    <select id="queryEvaluatePage" resultType="java.util.LinkedHashMap">
        select
        evaluate_info.id,
        evaluate_info.music_id,
        evaluate_info.user_id,
        evaluate_info.content,
        evaluate_info.score,
        evaluate_info.create_date,
        user_info.code as userCode,
        user_info.name as userName,
        user_info.images as userImages,
        music_info.code as musicCode,
        music_info.name as musicName,
        music_info.images as musicImages,
        music_info.file_url,
        singer_info.code as singerCode,
        singer_info.name as singerName,
        singer_info.images as singerImages,
        singer_info.`identity`,
        music_type_info.name as typeName,
        album_info.code as albumCode,
        album_info.name as albumName,
        album_info.images as albumImages
        from
        evaluate_info
        left join user_info on
        (user_info.id = evaluate_info.user_id)
        left join music_info on
        (music_info.id = evaluate_info.music_id)
        left join singer_info on
        (singer_info.id = music_info.singer_id)
        left join music_type_info on
        (music_type_info.id = music_info.type_id)
        left join album_info on
        (album_info.id = music_info.album_id)
        where 1 = 1
        <if test="evaluateInfo.userName != null and evaluateInfo.userName != ''">
            AND user_info.name LIKE CONCAT('%',#{evaluateInfo.userName},'%')
        </if>
        <if test="evaluateInfo.musicName != null and evaluateInfo.musicName != ''">
            AND music_info.name LIKE CONCAT('%',#{evaluateInfo.musicName},'%')
        </if>
        <if test="evaluateInfo.singerName != null and evaluateInfo.singerName != ''">
            AND singer_info.name LIKE CONCAT('%',#{evaluateInfo.singerName},'%')
        </if>
        <if test="evaluateInfo.albumName != null and evaluateInfo.albumName != ''">
            AND album_info.name LIKE CONCAT('%',#{evaluateInfo.albumName},'%')
        </if>
        order by evaluate_info.create_date desc
    </select>

    <!-- 根据音乐ID获取评价信息 -->
    <select id="queryEvaluateByMusic" resultType="java.util.LinkedHashMap">
        select evaluate_info.id,
               evaluate_info.music_id,
               evaluate_info.user_id,
               evaluate_info.content,
               evaluate_info.score,
               evaluate_info.create_date,
               user_info.code       as userCode,
               user_info.name       as userName,
               user_info.images     as userImages,
               music_info.code      as musicCode,
               music_info.name      as musicName,
               music_info.images    as musicImages,
               music_info.file_url,
               singer_info.code     as singerCode,
               singer_info.name     as singerName,
               singer_info.images   as singerImages,
               singer_info.`identity`,
               music_type_info.name as typeName,
               album_info.code      as albumCode,
               album_info.name      as albumName,
               album_info.images    as albumImages
        from evaluate_info
                 left join user_info on
            (user_info.id = evaluate_info.user_id)
                 left join music_info on
            (music_info.id = evaluate_info.music_id)
                 left join singer_info on
            (singer_info.id = music_info.singer_id)
                 left join music_type_info on
            (music_type_info.id = music_info.type_id)
                 left join album_info on
            (album_info.id = music_info.album_id)
        where 1 = 1
          AND evaluate_info.music_id = #{musicId}
        order by evaluate_info.create_date desc
    </select>

    <!-- 根据用户ID获取评价信息 -->
    <select id="queryEvaluateByUser" resultType="java.util.LinkedHashMap">
        select evaluate_info.id,
               evaluate_info.music_id,
               evaluate_info.user_id,
               evaluate_info.content,
               evaluate_info.score,
               evaluate_info.create_date,
               user_info.code       as userCode,
               user_info.name       as userName,
               user_info.images     as userImages,
               music_info.code      as musicCode,
               music_info.name      as musicName,
               music_info.images    as musicImages,
               music_info.file_url,
               singer_info.code     as singerCode,
               singer_info.name     as singerName,
               singer_info.images   as singerImages,
               singer_info.`identity`,
               music_type_info.name as typeName,
               album_info.code      as albumCode,
               album_info.name      as albumName,
               album_info.images    as albumImages
        from evaluate_info
                 left join user_info on
            (user_info.id = evaluate_info.user_id)
                 left join music_info on
            (music_info.id = evaluate_info.music_id)
                 left join singer_info on
            (singer_info.id = music_info.singer_id)
                 left join music_type_info on
            (music_type_info.id = music_info.type_id)
                 left join album_info on
            (album_info.id = music_info.album_id)
        where 1 = 1
          AND evaluate_info.user_id = #{userId}
        order by evaluate_info.create_date desc
    </select>
</mapper>
