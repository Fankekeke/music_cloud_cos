<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.mrbird.febs.cos.dao.MusicInfoMapper">

    <!-- 分页获取音乐信息 -->
    <select id="queryMusicPage" resultType="java.util.LinkedHashMap">
        select
        music_info.id,
        music_info.code,
        music_info.name,
        music_info.total_time,
        music_info.album_id,
        music_info.images,
        music_info.singer_ids,
        music_info.file_url,
        music_info.tag,
        music_info.type_id,
        music_info.create_date,
        singer_info.code as singerCode,
        singer_info.name as singerName,
        singer_info.images as singerImages,
        singer_info.`identity`,
        music_type_info.name as typeName,
        album_info.code as albumCode,
        album_info.name as albumName,
        album_info.images as albumImages
        from
        music_info
        left join singer_info on
        (singer_info.id = music_info.singer_ids)
        left join music_type_info on
        (music_type_info.id = music_info.type_id)
        left join album_info on
        (album_info.id = music_info.album_id)
        where
        1 = 1
        <if test="musicInfo.name != null and musicInfo.name != ''">
            AND music_info.name LIKE CONCAT('%',#{musicInfo.name},'%')
        </if>
        <if test="musicInfo.singerName != null and musicInfo.singerName != ''">
            AND singer_info.name LIKE CONCAT('%',#{musicInfo.singerName},'%')
        </if>
        <if test="musicInfo.albumName != null and musicInfo.albumName != ''">
            AND album_info.name LIKE CONCAT('%',#{musicInfo.albumName},'%')
        </if>
        order by
        music_info.create_date desc
    </select>

    <!-- 根据专辑获取收录歌曲 -->
    <select id="selectMusicByAlbum" resultType="java.util.LinkedHashMap">
        select music_info.id,
               music_info.code,
               music_info.name,
               music_info.total_time,
               music_info.album_id,
               music_info.images,
               music_info.singer_ids,
               music_info.file_url,
               music_info.tag,
               music_info.type_id,
               music_info.create_date,
               singer_info.code     as singerCode,
               singer_info.name     as singerName,
               singer_info.images   as singerImages,
               singer_info.`identity`,
               music_type_info.name as typeName,
               album_info.code      as albumCode,
               album_info.name      as albumName,
               album_info.images    as albumImages
        from music_info
                 left join singer_info on
            (singer_info.id = music_info.singer_ids)
                 left join music_type_info on
            (music_type_info.id = music_info.type_id)
                 left join album_info on
            (album_info.id = music_info.album_id)
        where 1 = 1
          AND music_info.album_id = #{albumId}
        order by music_info.create_date desc
    </select>

    <!-- 根据歌手获取收录歌曲 -->
    <select id="selectMusicBySinger" resultType="java.util.LinkedHashMap">
        select music_info.id,
               music_info.code,
               music_info.name,
               music_info.total_time,
               music_info.album_id,
               music_info.images,
               music_info.singer_ids,
               music_info.file_url,
               music_info.tag,
               music_info.type_id,
               music_info.create_date,
               singer_info.code     as singerCode,
               singer_info.name     as singerName,
               singer_info.images   as singerImages,
               singer_info.`identity`,
               music_type_info.name as typeName,
               album_info.code      as albumCode,
               album_info.name      as albumName,
               album_info.images    as albumImages
        from music_info
                 left join singer_info on
            (singer_info.id = music_info.singer_ids)
                 left join music_type_info on
            (music_type_info.id = music_info.type_id)
                 left join album_info on
            (album_info.id = music_info.album_id)
        where 1 = 1
          AND music_info.singer_ids = #{singerId}
        order by music_info.create_date desc
    </select>
</mapper>
